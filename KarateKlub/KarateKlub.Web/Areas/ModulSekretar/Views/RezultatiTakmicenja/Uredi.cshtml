@model KarateKlub.Web.Areas.ModulSekretar.Models.RezultatiTakmicenjaUrediVM
@using KarateKlub.Web.Areas.ModulSekretar.Models
@{
    ViewBag.PageTitle = "Uređivanje rezultata takmičenja";
    ViewBag.Title = "Uređivanje rezultata takmičenja";
    Layout = null;
}


<style>
    #PoravnanjeKontrola {
        margin-left: 1px;
        width: 300px;
    }

    #btnSpremi {
        margin-left: 200px;
    }

    #Poravnanje {
        margin-left: 40px;
        margin-top: 10px;
        width: 500px;
    }

    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
    }

    .validation-summary-valid {
        display: none;
    }
</style>

@using (Html.BeginForm("SpremiIzmjenuRezultataTakmicenja", "RezultatiTakmicenja", FormMethod.Post, new { style = "width:400px;", id = "formaUrediRezultatTakmicenja" }))
{
    @Html.HiddenFor(Model => Model.Id)
    @Html.HiddenFor(Model => Model.TakmicenjeId)

    <div id="Poravnanje">


        <div class="form-group" style="width:auto;">
            <label>Takmičar: </label>
            @Html.DropDownListFor(model => model.TakmicarId, Model.takmicari, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TakmicarId, "Odaberite takmičara iz opadajuće liste")
            @Html.ValidationMessage("TakmicarId", new { id = "TakmicarId" })
        </div>
        <div class="form-group" style="width:auto;">
            <label>Disciplina takmičenja: </label>
            @Html.DropDownListFor(model => model.DisciplinaTakmicenjaId, Model.disciplinaTakmicenja, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DisciplinaTakmicenjaId, "Odaberite disciplinu iz opadajuće liste")
            @Html.ValidationMessage("DisciplinaTakmicenjaIdError", new { id = "DisciplinaTakmicenjaIdError" })
        </div>
        <div class="form-group" style="width:auto;">
            <label>Starosna dob: </label>
            @Html.DropDownListFor(model => model.StarosnaDobId, Model.StarosneDobi, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StarosnaDobId, "Odaberite starosnu dob iz opadajuće liste")
            @Html.ValidationMessage("StarosnaDobIdError", new { id = "StarosnaDobIdError" })
        </div>
        <div class="form-group" style="width:auto;">
            <label>Kategorija: </label>
            @Html.TextBoxFor(model => model.Kategorija, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Kategorija)
            @Html.ValidationMessage("KategorijaError", new { id = "KategorijaError" })

        </div>
        <div class="form-group" style="width:auto;">
            <label>Osvojeno mjesto: </label>
            @Html.DropDownListFor(model => model.OsvojenoMjestoNaTakmicenjuId, Model.osvojenaMjestaNaTakmicenju, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OsvojenoMjestoNaTakmicenjuId, "Odaberite osvojeno mjesto iz opadajuće liste")
            @Html.ValidationMessage("OsvojenoMjestoNaTakmicenjuIdError", new { id = "OsvojenoMjestoNaTakmicenjuIdError" })
        </div>

        <div class="form-group" style="width:auto;">
            <label>Broj takmičara u kategoriji: </label>
            @Html.TextBoxFor(model => model.BrojTakmicaraUKategoriji, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BrojTakmicaraUKategoriji)
            @Html.ValidationMessage("BrojTakmicaraUKategorijiError", new { id = "BrojTakmicaraUKategorijiError" })
        </div>

        <div class="form-group" style="width:auto;">
            <label>Broj pobjeda: </label>
            @Html.TextBoxFor(model => model.BrojPobjeda, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BrojPobjeda)
            @Html.ValidationMessage("BrojPobjedaError", new { id = "BrojPobjedaError" })
        </div>

        <div class="form-group" style="width:auto;">
            <label>Broj poraza: </label>
            @Html.TextBoxFor(model => model.BrojPoraza, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BrojPoraza)
            @Html.ValidationMessage("BrojPorazaError", new { id = "BrojPorazaError" })
        </div>

        <div class="form-group" style="width:auto;">
            <label>Obrazloženje: </label>
            @Html.TextAreaFor(model => model.Obrazlozenje, new { @class = "form-control", @style = "resize:none;height:150px;" })
            @Html.ValidationMessageFor(model => model.Obrazlozenje)
            @Html.ValidationMessage("ObrazlozenjeUplateError", new { id = "ObrazlozenjeUplateError" })

        </div>
    </div>
    <div id="btnSpremi">
        <button type="submit" title="Spremi podatke" class="btn-lg btn btn-primary" style="width:170px;" onclick="return Validiraj()"><span class="fa fa-floppy-o"></span> Spremi  </button>
    </div>


}
<script type="text/javascript">


    document.getElementById("Kategorija").onblur = ValidirajKategoriju;
    document.getElementById("TakmicarId").onblur = ValidirajTakmicara;
    document.getElementById("DisciplinaTakmicenjaId").onblur = ValidirajDisciplinuTakmicenja;
    document.getElementById("OsvojenoMjestoNaTakmicenjuId").onblur = ValidirajOsvojenoMjesto;
    document.getElementById("BrojTakmicaraUKategoriji").onblur = ValidirajBrojTakmicaraUKategoriji;
    document.getElementById("BrojPobjeda").onblur = ValidirajBrojPobjeda;
    document.getElementById("BrojPoraza").onblur = ValidirajBrojPoraza;
    document.getElementById("StarosnaDobId").onblur = ValidirajStarosnuDob;


    function Validiraj() {
        var valid = true;
        if (ValidirajKategoriju() == false)
            valid = false;
        if (ValidirajStarosnuDob() == false)
            valid = false;
        if (ValidirajTakmicara() == false)
            valid = false;
        if (ValidirajDisciplinuTakmicenja() == false)
            valid = false;
        if (ValidirajOsvojenoMjesto() == false)
            valid = false;
        if (ValidirajBrojTakmicaraUKategoriji() == false)
            valid = false;
        if (ValidirajBrojPobjeda() == false)
            valid = false;
        if (ValidirajBrojPoraza() == false)
            valid = false;
        return valid;

    }

    function ValidirajKategoriju() {

        var valid = true;
        var element = document.getElementById("Kategorija");
        var error = document.getElementById("KategorijaError");


        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Kategorija je obavezno polje";
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
        }


        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajStarosnuDob() {

        var element = document.getElementById("StarosnaDobId");
        var error = document.getElementById("StarosnaDobIdError");

        if (element[0].selected == true) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
            error.innerHTML = "*Odaberite starosnu dob iz opadajuće liste";

            return false;
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
            return true;
        }

    }
    function ValidirajTakmicara() {

        var element = document.getElementById("TakmicarId");
        var error = document.getElementById("TakmicarIdError");

        if (element[0].selected == true) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
            error.innerHTML = "*Odaberite takmičara iz opadajuće liste";

            return false;
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
            return true;
        }

    }
    function ValidirajDisciplinuTakmicenja() {

        var element = document.getElementById("DisciplinaTakmicenjaId");
        var error = document.getElementById("DisciplinaTakmicenjaIdError");

        if (element[0].selected == true) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
            error.innerHTML = "*Odaberite disciplinu takmičenja iz opadajuće liste";

            return false;
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
            return true;
        }

    }

    function ValidirajOsvojenoMjesto() {

        var element = document.getElementById("OsvojenoMjestoNaTakmicenjuId");
        var error = document.getElementById("OsvojenoMjestoNaTakmicenjuIdError");

        if (element[0].selected == true) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
            error.innerHTML = "*Odaberite osvojeno mjesto iz opadajuće liste";

            return false;
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
            return true;
        }

    }

    function ValidirajBrojTakmicaraUKategoriji() {

        var valid = true;
        var element = document.getElementById("BrojTakmicaraUKategoriji");
        var error = document.getElementById("BrojTakmicaraUKategorijiError");


       

                var pravilo = new RegExp(/[A-Za-z*_$%?#&!.,+-]/, 'gi');
                if (pravilo.test(element.value) == true) {
                    valid = false;
                    error.innerHTML = "*Broj takmičara mora biti cijel pozitivan broj";
                }
                else {
                    element.classList.remove("input-validation-error");
                    error.classList.remove("field-validation-error");
                    error.classList.add("field-validation-valid");
                    error.innerHTML = "";
                }

        
        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajBrojPobjeda() {

        var valid = true;
        var element = document.getElementById("BrojPobjeda");
        var error = document.getElementById("BrojPobjedaError");




            var pravilo = new RegExp(/[A-Za-z*_$%?#&!.,+-]/, 'gi');
            if (pravilo.test(element.value) == true) {
                valid = false;
                error.innerHTML = "*Broj pobjeda mora biti cijel pozitivan broj";
            }
            else {
                element.classList.remove("input-validation-error");
                error.classList.remove("field-validation-error");
                error.classList.add("field-validation-valid");
                error.innerHTML = "";
            }

        
        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }

    function ValidirajBrojPoraza() {

        var valid = true;
        var element = document.getElementById("BrojPoraza");
        var error = document.getElementById("BrojPorazaError");


      

            var pravilo = new RegExp(/[A-Za-z*_$%?#&!.,+-]/, 'gi');
            if (pravilo.test(element.value) == true) {
                valid = false;
                error.innerHTML = "*Broj poraza mora biti cijel pozitivan broj";
            }
            else {
                element.classList.remove("input-validation-error");
                error.classList.remove("field-validation-error");
                error.classList.add("field-validation-valid");
                error.innerHTML = "";
            }

        
        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }


</script>




