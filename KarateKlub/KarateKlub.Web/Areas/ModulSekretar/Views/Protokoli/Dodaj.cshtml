@model KarateKlub.Web.Areas.ModulSekretar.Models.ProtokoliDodajVM
@using KarateKlub.Web.Areas.ModulSekretar.Models
@{
    ViewBag.PageTitle = "Upravljanje protokolom";
    ViewBag.Title = "Upravljanje protokolom";
    bool IzIzbornika = (bool)ViewData["opcija"];
    Layout = null;

}

<style>
    #PoravnanjeKontrola {
        margin-left: 40px;
        margin-top: 10px;
        width: 500px;
    }

    #btnSpremi {
        margin-left: 200px;
    }

    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
    }

    .validation-summary-valid {
        display: none;
    }
</style>



@using (Html.BeginForm("SpremiNoviProtokol", "Protokoli", FormMethod.Post, new { style = "width:400px;", id = "formaDodaj" }))
{
    @Html.HiddenFor(Model=>Model.OsobaId)
    <div id="PoravnanjeKontrola">
        <div class="form-group" style="width:auto;">
            <label>Naziv: </label>
            @Html.TextBoxFor(model => model.Naziv, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Naziv)
            @Html.ValidationMessage("NazivError", new { id = "NazivError" })

        </div>

        <div class="form-group" style="width:auto;">
            <label>Godina: </label>
            @Html.TextBoxFor(model => model.Godina, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Godina)
            @Html.ValidationMessage("GodinaError", new { id = "GodinaError" })

        </div>


        <br />
    </div>
        <div id="btnSpremi">
            <button type="submit" title="Spremi podatke" class="btn-lg btn btn-primary" style="width:170px;" onclick="return Validiraj()"><span class="fa fa-floppy-o"></span> Spremi  </button>
        </div>

}



<script type="text/javascript">

    document.getElementById("Naziv").onblur = ValidirajNaziv;
    document.getElementById("Godina").onblur = ValidirajGodinu;


    function Validiraj() {

        var validna = true;
        if (ValidirajNaziv() == false)
            validna = false;
        if (ValidirajGodinu() == false)
            validna = false;
        return validna;
    }



    function ValidirajNaziv() {

        var valid = true;
        var element = document.getElementById("Naziv");
        var error = document.getElementById("NazivError");

        if (element.value=="") {
            valid = false;
            error.innerHTML = "*Naziv je obavezno polje";
        }

        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
        }


        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }

    function ValidirajGodinu() {

        var valid = true;
        var element = document.getElementById("Godina");
        var error = document.getElementById("GodinaError");

        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Godina je obavezno polje";
        }
        else {
            if (element.value.length < 4) {
                valid = false;
                error.innerHTML = "*Godina mora imati 4 broja";
            }
            else {
                var pravilo = new RegExp(/[A-Za-z*_$%?#&!.,+-]/, 'gi');
                if (pravilo.test(element.value) == true) {
                    valid = false;
                    error.innerHTML = "*Godina mora biti broj";
                }
                else {
                    element.classList.remove("input-validation-error");
                    error.classList.remove("field-validation-error");
                    error.classList.add("field-validation-valid");
                    error.innerHTML = "";
                }
            }
        }
        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }


</script>
