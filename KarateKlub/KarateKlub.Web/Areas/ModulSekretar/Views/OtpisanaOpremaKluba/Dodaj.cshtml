@model KarateKlub.Web.Areas.ModulSekretar.Models.OtpisanaOpremaKlubaDodajVM
@using KarateKlub.Web.Areas.ModulSekretar.Models
@{
    ViewBag.PageTitle = "Novi otpis opreme";
    ViewBag.Title = "Novi otpis opreme";
    Layout = null;
}


<style>
    #PoravnanjeKontrola {
        margin-left: 1px;
        width: 300px;
    }

    #btnSpremi {
        margin-left: 200px;
    }

    #Poravnanje {
        margin-left: 40px;
        margin-top: 10px;
        width: 500px;
    }

    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
    }

    .validation-summary-valid {
        display: none;
    }
</style>

@using (Html.BeginForm("SpremiNovuOtpisanuOpremu", "OtpisanaOpremaKluba", FormMethod.Post, new { style = "width:400px;", id = "formaDodajOtpisanuOpremu" }))
{

    <div id="Poravnanje">


        <div class="form-group" style="width:auto;">
            <label>Vrsta opreme: </label>
            @Html.DropDownListFor(model => model.VrstaOpremeKlubaId, Model.vrsteOpremeKluba, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.VrstaOpremeKlubaId, "Odaberite vrstu opreme iz opadajuće liste")
            @Html.ValidationMessage("VrstaOpremeKlubaIdError", new { id = "VrstaOpremeKlubaIdError" })
        </div>

        <div class="form-group" style="width:auto;">
            <label>Količina: </label>
            @Html.TextBoxFor(model => model.OtpisanaKolicina, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OtpisanaKolicina)
            @Html.ValidationMessage("OtpisanaKolicinaError", new { id = "OtpisanaKolicinaError" })
        </div>

        <div class="form-group" style="width:auto;">
            <label>Jedinica mjere: </label>
            @Html.DropDownListFor(model => model.JedinicaMjereId, Model.jediniceMjere, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.jediniceMjere, "Odaberite jedinicu mjere iz opadajuće liste")
            @Html.ValidationMessage("JedinicaMjereIdError", new { id = "JedinicaMjereIdError" })
        </div>


        <div class="form-group" style="width:auto;">

            <label>Datum otpisa: </label>

            <div class="input-group date">
                @Html.TextBoxFor(model => model.DatumOtpisaOpreme, new { @class = "form-control datepicker", onchange = "ValidirajDatumOtpisa()" })
                @Html.ValidationMessageFor(model => model.DatumOtpisaOpreme)
                @Html.ValidationMessage("DatumOtpisaOpremeError", new { id = "DatumOtpisaOpremeError" })
                <div class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </div>
            </div>

        </div>
        <div class="form-group" style="width:auto;">
            <label>Obrazloženje: </label>
            @Html.TextAreaFor(model => model.Obrazlozenje, new { @class = "form-control", @style = "resize:none;height:150px;" })
            @Html.ValidationMessageFor(model => model.Obrazlozenje)
            @Html.ValidationMessage("ObrazlozenjeError", new { id = "ObrazlozenjeError" })

        </div>
    </div>
    <div id="btnSpremi">
        <button type="submit" title="Spremi podatke" class="btn-lg btn btn-primary" style="width:170px;" onclick="return Validiraj()"><span class="fa fa-floppy-o"></span> Spremi  </button>
    </div>


}
<script>

    $(function () {
        $('.datepicker').datepicker({
            autoclose: true,
            format: 'dd/mm/yyyy',
            language: 'bs'
        })
    })
</script>
<script type="text/javascript">


    document.getElementById("VrstaOpremeKlubaId").onblur = ValidirajVrstuOpreme;
    document.getElementById("JedinicaMjereId").onblur = ValidirajJedinicuMjere;
    document.getElementById("OtpisanaKolicina").onblur = ValidirajKolicinuOpreme;
    document.getElementById("DatumOtpisaOpreme").onblur = ValidirajDatumOtpisa;



    function Validiraj() {
        var valid = true;
        if (ValidirajVrstuOpreme() == false)
            valid = false;
        if (ValidirajJedinicuMjere() == false)
            valid = false;
        if (ValidirajKolicinuOpreme() == false)
            valid = false;
        if (ValidirajDatumOtpisa() == false)
            valid = false;
        return valid;

    }
    function ValidirajVrstuOpreme() {

        var element = document.getElementById("VrstaOpremeKlubaId");
        var error = document.getElementById("VrstaOpremeKlubaIdError");

        if (element[0].selected == true) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
            error.innerHTML = "*Odaberite vrstu opreme iz opadajuće liste";

            return false;
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
            return true;
        }

    }


    function ValidirajKolicinuOpreme() {

        var valid = true;
        var element = document.getElementById("OtpisanaKolicina");
        var error = document.getElementById("OtpisanaKolicinaError");

        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Otpisana količina je obavezno polje";
        }
        else {

            var pravilo = new RegExp(/[A-Za-z*_$%?#&!.,+-]/, 'gi');
                if (pravilo.test(element.value) == true) {
                    valid = false;
                    error.innerHTML = "*Otpisana količina mora biti broj";
                }
                else {
                    element.classList.remove("input-validation-error");
                    error.classList.remove("field-validation-error");
                    error.classList.add("field-validation-valid");
                    error.innerHTML = "";
                }
            }

        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }


 

    function ValidirajJedinicuMjere() {

        var element = document.getElementById("JedinicaMjereId");
        var error = document.getElementById("JedinicaMjereIdError");

        if (element[0].selected == true) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
            error.innerHTML = "*Odaberite jedinicu mjere iz opadajuće liste";

            return false;
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
            return true;
        }

    }
    function ValidirajDatumOtpisa() {
        var valid = true;
        var element = document.getElementById("DatumOtpisaOpreme");
        var error = document.getElementById("DatumOtpisaOpremeError");

        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Datum otpisa je obavezno polje";
        }
        else {
            if (element.value.length < 10) {
                valid = false;
                error.innerHTML = "*Pogrešan format datuma";
            }
            else {
                element.classList.remove("input-validation-error");
                error.classList.remove("field-validation-error");
                error.classList.add("field-validation-valid");
                error.innerHTML = "";
                valid = true;
            }
        }
        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
</script>




