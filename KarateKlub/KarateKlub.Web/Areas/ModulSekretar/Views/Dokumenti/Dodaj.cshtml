@model KarateKlub.Web.Areas.ModulSekretar.Models.DokumentiDodajVM
@using KarateKlub.Web.Areas.ModulSekretar.Models
@{
    ViewBag.PageTitle = "Upravljanje protokolom";
    ViewBag.Title = "Upravljanje protokolom";
    Layout = null;

}

<style>
    #PoravnanjeKontrola {
        margin-left: 40px;
        margin-top: 10px;
        width: 500px;
    }

    #btnSpremi {
        margin-left: 200px;
    }

    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
    }

    .validation-summary-valid {
        display: none;
    }
</style>



@using (Html.BeginForm("SpremiNoviDokument", "Dokumenti", FormMethod.Post, new { style = "width:400px;", enctype = "multipart/form-data", id = "formaDodaj" }))

{
    @Html.HiddenFor(Model => Model.stavkaId)
    <div id="PoravnanjeKontrola">
        <div class="form-group" style="width:auto;">
            <label>Dokument: </label>
            @Html.TextBoxFor(model => model.d, "Dodaj dokument", new { @class = "form-control", type = "file",onchange= "ValidirajDokument()" })
            @Html.ValidationMessageFor(model => model.d)
            @Html.ValidationMessage("DokumentError", new { id = "DokumentError" })
        </div>

        <br />
    </div>
    <div id="btnSpremi">
        <button type="submit" title="Spremi dokument" class="btn-lg btn btn-primary" style="width:170px;" onclick="return Validiraj()"><span class="fa fa-floppy-o"></span> Spremi  </button>
    </div>

}



<script type="text/javascript">

    document.getElementById("d").onblur = ValidirajDokument;


    function Validiraj() {


        var validna = true;
        if (ValidirajDokument() == false)
            validna = false;
  
        return validna
    }

    function ValidirajDokument() {
        var element = document.getElementById("d");
        var error = document.getElementById("DokumentError");


        var dozvoljeneEkstenzije = new Array("txt", "pdf", "doc", "docx", "ppt", "pptx", "xls", "xlsx","nb","zip","zipx",".rar");

        var ekstenzijaUcitanogDokumenta = element.value.split('.').pop().toLowerCase();

        if (element.value.length == 0) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
            error.innerHTML = "*Odaberite dokument koju želite spasiti";
            return false;
        }
        else {
            if (element.value.length != 0) {
                for (var i = 0; i <= dozvoljeneEkstenzije.length; i++) {
                    if (dozvoljeneEkstenzije[i] == ekstenzijaUcitanogDokumenta) {
                        element.classList.remove("input-validation-error");
                        error.classList.remove("field-validation-error");
                        error.classList.add("field-validation-valid");
                        error.innerHTML = "";
                        return true;
                    }
               
                }
                element.classList.add("input-validation-error");
                error.classList.remove("field-validation-valid");
                error.classList.add("field-validation-error");
                error.innerHTML = "*Odabrani file nije dozvoljenog formata";
                return false;
            }
        }

        element.classList.remove("input-validation-error");
        error.classList.remove("field-validation-error");
        error.classList.add("field-validation-valid");
        error.innerHTML = "";
        return true;


    }

</script>

