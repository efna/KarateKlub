@model KarateKlub.Web.Areas.ModulSekretar.Models.RegistracijeTakmicaraDodajVM
@using KarateKlub.Web.Areas.ModulSekretar.Models
@{
    ViewBag.PageTitle = "Nova registracija takmičara";
    ViewBag.Title = "Novo registracija takmičara";
    Layout = null;
}


<style>
    #PoravnanjeKontrola {
        margin-left: 1px;
        width: 300px;
    }

    #btnSpremi {
        margin-left: 200px;
    }

    #Poravnanje {
        margin-left: 40px;
        margin-top: 10px;
        width: 500px;
    }

    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
    }

    .validation-summary-valid {
        display: none;
    }
</style>

@using (Html.BeginForm("SpremiNovuRegistracijuTakmicara", "RegistracijeTakmicara", FormMethod.Post, new { style = "width:400px;", id = "formaDodajRegistracijuTakmicara" }))
{
    @Html.HiddenFor(Model => Model.savez)
    <div id="Poravnanje">

        <div class="form-group" style="width:auto;">
            <label>Naziv: </label>
            @Html.TextBoxFor(model => model.Naziv, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Naziv)
            @Html.ValidationMessage("NazivError", new { id = "NazivError" })


        </div>

        <div class="form-group" style="width:auto;">
            <label>Savez: </label>
            @Html.DropDownListFor(model => model.SavezId, Model.savezi, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SavezId, "Odaberite savez iz opadajuće liste")
            @Html.ValidationMessage("SavezIdError", new { id = "SavezIdError" })
        </div>


        <div class="form-group" style="width:auto;">

            <label>Datum registracije: </label>

            <div class="input-group date">
                @Html.TextBoxFor(model => model.DatumRegistracijeTakmicara, new { @class = "form-control datepicker", onchange = "ValidirajDatumRegistracijeTakmicara()" })
                @Html.ValidationMessageFor(model => model.DatumRegistracijeTakmicara)
                @Html.ValidationMessage("DatumRegistracijeTakmicaraError", new { id = "DatumRegistracijeTakmicaraError" })
                <div class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </div>
            </div>

        </div>
        <div class="form-group" style="width:auto;">

            <label>Datum isteka registracije: </label>

            <div class="input-group date">
                @Html.TextBoxFor(model => model.DatumIstekaRegistracijeTakmicara, new { @class = "form-control datepicker", onchange = "ValidirajDatumIstekaRegistracijeTakmicara()" })
                @Html.ValidationMessageFor(model => model.DatumIstekaRegistracijeTakmicara)
                @Html.ValidationMessage("DatumIstekaRegistracijeTakmicaraError", new { id = "DatumIstekaRegistracijeTakmicaraError" })
                <div class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </div>
            </div>

        </div>
        <div class="form-group" style="width:auto;">
            <label>Registrovani takmičari: </label>
                @Html.DropDownListFor(model => model.ClanKlubaId, Model.takmicariKluba, new { @class = "form-control select2", @multiple = "multiple", @id = "listaTakmicara",onchange= "ValidirajListuTakmicara()" })
            @Html.ValidationMessageFor(model => model.ClanKlubaId, "Odaberite registrovane takmičara iz opadajuće liste")
            @Html.ValidationMessage("ClanKlubaIdError", new { id = "ClanKlubaIdError" })
            </div>


        <div class="form-group" style="width:auto;">
            <label>Iznos registracije: </label>
            @Html.TextBoxFor(model => model.IznosKMBrojevima, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IznosKMBrojevima)
            @Html.ValidationMessage("IznosKMBrojevimaError", new { id = "IznosKMBrojevimaError" })

        </div>
        <div class="form-group" style="width:auto;">
            <label>Iznos registracije slovima: </label>
            @Html.TextAreaFor(model => model.IznosKMSlovima, new { @class = "form-control", @style = "resize:none;height:70px;" })
            @Html.ValidationMessageFor(model => model.IznosKMSlovima)
            @Html.ValidationMessage("IznosKMSlovimaError", new { id = "IznosKMSlovimaError" })

        </div>

        <div class="form-group" style="width:auto;">

            <label>Datum uplate: </label>

            <div class="input-group date">
                @Html.TextBoxFor(model => model.DatumUplate, new { @class = "form-control datepicker", onchange = "ValidirajDatumUplate()" })
                @Html.ValidationMessageFor(model => model.DatumUplate)
                @Html.ValidationMessage("DatumUplateError", new { id = "DatumUplateError" })
                <div class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </div>
            </div>

        </div>
        <div class="form-group" style="width:auto;">
            <label>Obrazloženje uplate: </label>
            @Html.TextAreaFor(model => model.Obrazlozenje, new { @class = "form-control", @style = "resize:none;height:150px;" })
            @Html.ValidationMessageFor(model => model.Obrazlozenje)
            @Html.ValidationMessage("ObrazlozenjeUplateError", new { id = "ObrazlozenjeUplateError" })

        </div>
    </div>
    <div id="btnSpremi">
        <button type="submit" title="Spremi podatke" class="btn-lg btn btn-primary" style="width:170px;" onclick="return Validiraj()"><span class="fa fa-floppy-o"></span> Spremi  </button>
    </div>


}


<script>
    $(function () {

        $('#listaTakmicara option:contains("-Odaberite takmičare-")').attr("disabled", "disabled");
        $(".select2").select2({
            closeOnSelect: false,
            language: {
                noResults: function () {
                    return "Nema pronađenih rezultata";
                },
                errorLoading: function () {
            return 'Preuzimanje nije uspjelo.';
                },
              
                loadingMore: function () {
                    return 'Učitavanje rezultata…';
                },
                searching: function () {
                    return 'Pretraga…';
                }
            }
        });
       
    })
</script>
<script>

    $(function () {
        $('.datepicker').datepicker({
            autoclose: true,
            format: 'dd/mm/yyyy',
            language: 'bs'
        })
    })
</script>
<script type="text/javascript">


    document.getElementById("Naziv").onblur = ValidirajNazivRegistracije;
    document.getElementById("SavezId").onblur = ValidirajSavez;
    document.getElementById("DatumRegistracijeTakmicara").onblur = ValidirajDatumRegistracijeTakmicara;
    document.getElementById("DatumIstekaRegistracijeTakmicara").onblur = ValidirajDatumIstekaRegistracijeTakmicara;
    document.getElementById("IznosKMBrojevima").onblur = ValidirajIznosBrojevima;
    document.getElementById("IznosKMSlovima").onblur = ValidirajIznosSlovima;
    document.getElementById("DatumUplate").onblur = ValidirajDatumUplate;



    function Validiraj() {
        var valid = true;
        if (ValidirajNazivRegistracije() == false)
            valid = false;
        if (ValidirajSavez() == false)
            valid = false;
        if (ValidirajDatumRegistracijeTakmicara() == false)
            valid = false;
        if (ValidirajDatumIstekaRegistracijeTakmicara() == false)
            valid = false;
        if (ValidirajIznosBrojevima() == false)
            valid = false;
        if (ValidirajIznosSlovima() == false)
            valid = false;
        if (ValidirajDatumUplate() == false)
            valid = false;
        if (ValidirajListuTakmicara() == false)
            valid = false;
        return valid;

    }

    function ValidirajNazivRegistracije() {

        var valid = true;
        var element = document.getElementById("Naziv");
        var error = document.getElementById("NazivError");


        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Naziv registracije je obavezno polje";
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
        }


        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }

    function ValidirajSavez() {

        var element = document.getElementById("SavezId");
        var error = document.getElementById("SavezIdError");

        if (element[0].selected == true) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
            error.innerHTML = "*Odaberite savez iz opadajuće liste";

            return false;
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
            return true;
        }

    }

    function ValidirajDatumRegistracijeTakmicara() {
        var valid = true;
        var element = document.getElementById("DatumRegistracijeTakmicara");
        var error = document.getElementById("DatumRegistracijeTakmicaraError");
        var datumDo = document.getElementById("DatumIstekaRegistracijeTakmicara");
        var datumDoError = document.getElementById("DatumIstekaRegistracijeTakmicaraError");
        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Datum registracije je obavezno polje";
        }
        else 
            if (element.value.length < 10) {
                valid = false;
                error.innerHTML = "*Pogrešan format datuma";
            }
       
        else if (element.value != "" && datumDo.value != "") {
            var danOd = element.value.substring(0, 2);
            var mjesecOd = element.value.substring(3, 5);
            var godinaOd = element.value.substring(6, 20);
            var danDo = datumDo.value.substring(0, 2);
            var mjesecDo = datumDo.value.substring(3, 5);
            var godinaDo = datumDo.value.substring(6, 20);
            var noviDatumOd = mjesecOd + "/" + danOd + "/" + godinaOd;
            var noviDatumDo = mjesecDo + "/" + danDo + "/" + godinaDo;

            var dod = new Date(noviDatumOd);
            var ddo = new Date(noviDatumDo);
            if (ddo <= dod) {
                valid = false;
                error.innerHTML = "*Datum registracije mora biti manji od datuma isteka registracije";

            }

            else {
                element.classList.remove("input-validation-error");
                error.classList.remove("field-validation-error");
                error.classList.add("field-validation-valid");
                error.innerHTML = "";
                valid = true;
            }


        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
            valid = true;
        }
        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajDatumIstekaRegistracijeTakmicara() {
        var valid = true;
        var element = document.getElementById("DatumIstekaRegistracijeTakmicara");
        var error = document.getElementById("DatumIstekaRegistracijeTakmicaraError");
        var datumOd = document.getElementById("DatumRegistracijeTakmicara");
        var datumOdError = document.getElementById("DatumRegistracijeTakmicaraError");
        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Datum isteka registracije je obavezno polje";
        }
        else 
            if (element.value.length < 10) {
                valid = false;
                error.innerHTML = "*Pogrešan format datuma";
            }
    
        else if (element.value != "" && datumOd.value != "") {
            var danDo = element.value.substring(0, 2);
            var mjesecDo = element.value.substring(3, 5);
            var godinaDo = element.value.substring(6, 20);
            var danOd = datumOd.value.substring(0, 2);
            var mjesecOd = datumOd.value.substring(3, 5);
            var godinaOd = datumOd.value.substring(6, 20);
            var noviDatumOd = mjesecOd + "/" + danOd + "/" + godinaOd;
            var noviDatumDo = mjesecDo + "/" + danDo + "/" + godinaDo;

            var dod = new Date(noviDatumOd);
            var ddo = new Date(noviDatumDo);
            if (ddo <= dod) {
                valid = false;
                error.innerHTML = "*Datum registracije mora biti veći od datuma registracije";

            }

            else {
                element.classList.remove("input-validation-error");
                error.classList.remove("field-validation-error");
                error.classList.add("field-validation-valid");
                error.innerHTML = "";
                valid = true;
            }


        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
            valid = true;
        }
        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajListuTakmicara() {

        var element = document.getElementById("listaTakmicara");
        var error = document.getElementById("ClanKlubaIdError");
        if ($("#listaTakmicara").val() == "") {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
            error.innerHTML = "*Odaberite takmičare iz opadajuće liste";

            return false;
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
            return true;
        }

    }
    function ValidirajDatumUplate() {
        var valid = true;
        var element = document.getElementById("DatumUplate");
        var error = document.getElementById("DatumUplateError");

        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Datum uplate je obavezno polje";
        }
        else {
            if (element.value.length < 10) {
                valid = false;
                error.innerHTML = "*Pogrešan format datuma";
            }
            else {
                element.classList.remove("input-validation-error");
                error.classList.remove("field-validation-error");
                error.classList.add("field-validation-valid");
                error.innerHTML = "";
                valid = true;
            }
        }
        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajIznosBrojevima() {

        var valid = true;
        var element = document.getElementById("IznosKMBrojevima");
        var error = document.getElementById("IznosKMBrojevimaError");

        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Iznos je obavezno polje";
        }
        else {

            var pravilo = new RegExp(/^[+]?[0-9]+(\,[0-9]+)?$/);

            if (!pravilo.test(element.value) == true) {
                valid = false;
                error.innerHTML = "*Iznos može biti samo broj";
            }
            else {
                element.classList.remove("input-validation-error");
                error.classList.remove("field-validation-error");
                error.classList.add("field-validation-valid");
                error.innerHTML = "";
            }
        }


        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajIznosSlovima() {

        var valid = true;
        var element = document.getElementById("IznosKMSlovima");
        var error = document.getElementById("IznosKMSlovimaError");

        var pravilo = new RegExp(/[0-9*_$%?#&!.,+]/, 'gi');
        if (pravilo.test(element.value) == true) {
            valid = false;
            error.innerHTML = "*Iznos slovima se sastoji isključivo od slova";
        }


        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
        }


        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
</script>







