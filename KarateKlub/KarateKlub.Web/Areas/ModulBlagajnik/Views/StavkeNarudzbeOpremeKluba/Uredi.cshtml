@model KarateKlub.Web.Areas.ModulBlagajnik.Models.StavkeNarudzbeOpremeKlubaUrediVM
@using KarateKlub.Web.Areas.ModulBlagajnik.Models
@{
    ViewBag.PageTitle = "Uređivanje stavke";
    ViewBag.Title = "Uređivanje stavke";
    Layout = null;
}


<style>
    #PoravnanjeKontrola {
        margin-left: 1px;
        width: 300px;
    }

    #btnSpremi {
        margin-left: 200px;
    }

    #Poravnanje {
        margin-left: 40px;
        margin-top: 10px;
        width: 500px;
    }

    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
    }

    .validation-summary-valid {
        display: none;
    }
</style>

@using (Html.BeginForm("SpremiIzmjenuNarudzbe", "StavkeNarudzbeOpremeKluba", FormMethod.Post, new { style = "width:400px;", enctype = "multipart/form-data", id = "formaUrediStavku" }))
{
    @Html.HiddenFor(Model => Model.NarudzbaOpremeKlubaId)
    @Html.HiddenFor(Model => Model.Id)
    <div id="Poravnanje">


        <div class="form-group" style="width:auto;">
            <label>Vrsta opreme: </label>
            @Html.DropDownListFor(model => model.VrstaOpremeKlubaId, Model.vrsteOpremeKluba, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.VrstaOpremeKlubaId, "Odaberite vrstu opreme iz opadajuće liste")
            @Html.ValidationMessage("VrstaOpremeKlubaError", new { id = "VrstaOpremeKlubaError" })
        </div>

        <div class="form-group" style="width:auto;">
            <label>Količina: </label>
            @Html.TextBoxFor(model => model.KolicinaNabavljeneOpreme, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.KolicinaNabavljeneOpreme)
            @Html.ValidationMessage("KolicinaNabavljeneOpremeError", new { id = "KolicinaNabavljeneOpremeError" })
        </div>

        <div class="form-group" style="width:auto;">
            <label>Jedinica mjere: </label>
            @Html.DropDownListFor(model => model.JedinicaMjereId, Model.jediniceMjere, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.jediniceMjere, "Odaberite jedinicu mjere iz opadajuće liste")
            @Html.ValidationMessage("JedinicaMjereError", new { id = "JedinicaMjereError" })
        </div>

        <div class="form-group" style="width:auto;">
            <label>Marka: </label>
            @Html.TextBoxFor(model => model.MarkaNabavljeneOpreme, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MarkaNabavljeneOpreme)
            @Html.ValidationMessage("MarkaNabavljeneOpremeError", new { id = "MarkaNabavljeneOpremeError" })

        </div>
        <div class="form-group" style="width:auto;">
            <label>Wkf/Ekf odobreno: </label>
            @Html.CheckBoxFor(model => model.IsWkfEkfApproved, new { @class = "checkbox", @style = "height:30px;width:30px;" })
            @Html.ValidationMessageFor(model => model.IsWkfEkfApproved)
            @Html.ValidationMessage("IsWkfEkfApprovedError", new { id = "IsWkfEkfApprovedError" })

        </div>
    </div>
    <div id="btnSpremi">
        <button type="submit" title="Spremi podatke" class="btn-lg btn btn-primary" style="width:170px;" onclick="return Validiraj()"><span class="fa fa-floppy-o"></span> Spremi  </button>
    </div>


}

<script type="text/javascript">


    document.getElementById("VrstaOpremeKlubaId").onblur = ValidirajVrstuOpreme;
    document.getElementById("JedinicaMjereId").onblur = ValidirajJedinicuMjere;
    document.getElementById("KolicinaNabavljeneOpreme").onblur = ValidirajKolicinuOpreme;




    function Validiraj() {
        var valid = true;
        if (ValidirajVrstuOpreme() == false)
            valid = false;
        if (ValidirajJedinicuMjere() == false)
            valid = false;
        if (ValidirajKolicinuOpreme() == false)
            valid = false;

        return valid;

    }


    function ValidirajKolicinuOpreme() {

        var valid = true;
        var element = document.getElementById("KolicinaNabavljeneOpreme");
        var error = document.getElementById("KolicinaNabavljeneOpremeError");

        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Količina je obavezno polje";
        }
        else {

                var pravilo = new RegExp(/[A-Za-z*_$%?#&!.,+-]/, 'gi');
                if (pravilo.test(element.value) == true) {
                    valid = false;
                    error.innerHTML = "*Količina mora biti broj";
                }
                else {
                    element.classList.remove("input-validation-error");
                    error.classList.remove("field-validation-error");
                    error.classList.add("field-validation-valid");
                    error.innerHTML = "";
                }
            }

        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }


    function ValidirajVrstuOpreme() {

        var element = document.getElementById("VrstaOpremeKlubaId");
        var error = document.getElementById("VrstaOpremeKlubaError");

        if (element[0].selected == true) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
            error.innerHTML = "*Odaberite vrstu opreme iz opadajuće liste";

            return false;
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
            return true;
        }

    }


    function ValidirajJedinicuMjere() {

        var element = document.getElementById("JedinicaMjereId");
        var error = document.getElementById("JedinicaMjereError");

        if (element[0].selected == true) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
            error.innerHTML = "*Odaberite jedinicu mjere iz opadajuće liste";

            return false;
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
            return true;
        }

    }

</script>





