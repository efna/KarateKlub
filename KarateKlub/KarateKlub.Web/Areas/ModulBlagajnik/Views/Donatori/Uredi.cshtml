@model KarateKlub.Web.Areas.ModulBlagajnik.Models.DonatoriUrediVM
@using KarateKlub.Web.Areas.ModulBlagajnik.Models
@{
    ViewBag.PageTitle = "Uređivanje donacije";
    ViewBag.Title = "Uređivanje donacije";
    Layout = null;
}


<style>
    #PoravnanjeKontrola {
        margin-left: 1px;
        width: 300px;
    }

    #btnSpremi {
        margin-left: 200px;
    }

    #Poravnanje {
        margin-left: 40px;
        margin-top: 10px;
        width: 500px;
    }

    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
    }

    .validation-summary-valid {
        display: none;
    }
</style>

@using (Html.BeginForm("SpremiIzmjenuDonatora", "Donatori", FormMethod.Post, new { style = "width:400px;", id = "formaUrediDonatora" }))
{
    @Html.HiddenFor(model => model.Id)
    <div id="Poravnanje">

        <div class="form-group" style="width:auto;">
            <label>Donator: </label>
            @Html.TextBoxFor(model => model.Naziv, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Naziv)
            @Html.ValidationMessage("NazivError", new { id = "NazivError" })
        </div>

        <div class="form-group" style="width:auto;">
            <label>Vrsta lica: </label>
            @Html.DropDownListFor(model => model.VrstaLicaId, Model.vrsteLica, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.VrstaLicaId, "Odaberite vrstu lica iz opadajuće liste")
            @Html.ValidationMessage("VrstaLicaIdError", new { id = "VrstaLicaIdError" })
        </div>

        <div class="form-group" style="width:auto;">
            <label>Ime osobe: </label>
            @Html.TextBoxFor(model => model.ImeOsobe, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ImeOsobe)
            @Html.ValidationMessage("ImeOsobeError", new { id = "ImeOsobeError" })
        </div>

        <div class="form-group" style="width:auto;">
            <label>Prezime osobe: </label>
            @Html.TextBoxFor(model => model.PrezimeOsobe, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PrezimeOsobe)
            @Html.ValidationMessage("PrezimeOsobeError", new { id = "PrezimeOsobeError" })
        </div>

        <div class="form-group" style="width:auto;">
            <label>Kontakt telefon: </label>
            @Html.TextBoxFor(model => model.KontaktTelefon, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.KontaktTelefon)
            @Html.ValidationMessage("KontaktTelefonError", new { id = "KontaktTelefonError" })

        </div>
        <div class="form-group" style="width:auto;">
            <label>Email: </label>
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email)
            @Html.ValidationMessage("EmailError", new { id = "EmailError" })

        </div>
        <div class="form-group" style="width:auto;">
            <label>Broj priznanice: </label>
            @Html.TextBoxFor(model => model.BrojPriznanice, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BrojPriznanice)
            @Html.ValidationMessage("BrojPriznaniceError", new { id = "BrojPriznaniceError" })
        </div>
        <div class="form-group" style="width:auto;">

            <label>Datum uplate: </label>

            <div class="input-group date">
                @Html.TextBoxFor(model => model.DatumUplate, new { @class = "form-control datepicker", onchange = "ValidirajDatumUplate()" })
                @Html.ValidationMessageFor(model => model.DatumUplate)
                @Html.ValidationMessage("DatumUplateError", new { id = "DatumUplateError" })
                <div class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </div>
            </div>

        </div>
        <div class="form-group" style="width:auto;">
            <label>Iznos: </label>
            @Html.TextBoxFor(model => model.IznosKMBrojevima, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IznosKMBrojevima)
            @Html.ValidationMessage("IznosKMBrojevimaError", new { id = "IznosKMBrojevimaError" })

        </div>
        <div class="form-group" style="width:auto;">
            <label>Iznos slovima: </label>
            @Html.TextAreaFor(model => model.IznosKMSlovima, new { @class = "form-control", @style = "resize:none;height:70px;" })
            @Html.ValidationMessageFor(model => model.IznosKMSlovima)
            @Html.ValidationMessage("IznosKMSlovimaError", new { id = "IznosKMSlovimaError" })

        </div>


        <div class="form-group" style="width:auto;">
            <label>Obrazloženje uplate: </label>
            @Html.TextAreaFor(model => model.Obrazlozenje, new { @class = "form-control", @style = "resize:none;height:150px;" })
            @Html.ValidationMessageFor(model => model.Obrazlozenje)
            @Html.ValidationMessage("ObrazlozenjeError", new { id = "ObrazlozenjeError" })

        </div>


    </div>
    <div id="btnSpremi">
        <button type="submit" title="Spremi podatke" class="btn-lg btn btn-primary" style="width:170px;" onclick="return Validiraj()"><span class="fa fa-floppy-o"></span> Spremi  </button>
    </div>


}
<script>

    $(function () {
        $('.datepicker').datepicker({
            autoclose: true,
            format: 'dd/mm/yyyy',
            language: 'bs'
        })
    })
</script>
<script type="text/javascript">


    document.getElementById("VrstaLicaId").onblur = ValidirajVrstuLica;
    document.getElementById("Naziv").onblur = ValidirajNazivDonatora;
    document.getElementById("ImeOsobe").onblur = ValidirajImeOsobe;
    document.getElementById("PrezimeOsobe").onblur = ValidirajPrezimeOsobe;
    document.getElementById("KontaktTelefon").onblur = ValidirajKontaktTelefon;
    document.getElementById("Email").onblur = ValidirajEmail;
    document.getElementById("DatumUplate").onblur = ValidirajDatumUplate;
    document.getElementById("IznosKMBrojevima").onblur = ValidirajIznosBrojevima;
    document.getElementById("IznosKMSlovima").onblur = ValidirajIznosSlovima;
    document.getElementById("BrojPriznanice").onblur = ValidirajBrojPriznanice;





    function Validiraj() {
        var valid = true;
        if (ValidirajVrstuLica()== false)
            valid = false;
        if (ValidirajNazivDonatora() == false)
            valid = false;
        if (ValidirajImeOsobe() == false)
            valid = false;
        if (ValidirajPrezimeOsobe() == false)
            valid = false;
        if (ValidirajKontaktTelefon() == false)
            valid = false;
        if (ValidirajEmail() == false)
            valid = false;
        if (ValidirajDatumUplate() == false)
            valid = false;
        if (ValidirajIznosBrojevima() == false)
            valid = false;
        if (ValidirajIznosSlovima() == false)
            valid = false;
        if (ValidirajBrojPriznanice() == false)
            valid = false;
        return valid;

    }


    function ValidirajVrstuLica() {

        var element = document.getElementById("VrstaLicaId");
        var error = document.getElementById("VrstaLicaIdError");

        if (element[0].selected == true) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
            error.innerHTML = "*Odaberite vrstu lica iz opadajuće liste";

            return false;
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
            return true;
        }

    }
    function ValidirajNazivDonatora() {

        var valid = true;
        var element = document.getElementById("Naziv");
        var error = document.getElementById("NazivError");

        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Naziv donatora je obavezno polje";
        }

        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
        }


        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajBrojPriznanice() {

        var valid = true;
        var element = document.getElementById("BrojPriznanice");
        var error = document.getElementById("BrojPriznaniceError");

        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Broj priznanice je obavezno polje";
        }

        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
        }


        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajImeOsobe() {

        var valid = true;
        var element = document.getElementById("ImeOsobe");
        var error = document.getElementById("ImeOsobeError");

        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Ime osobe je obavezno polje";
        }
        else {
            if (element.value.length < 2) {
                valid = false;
                error.innerHTML = "*Ime se sastoji od najmanje 2 slova";
            }
            else {
                var pravilo = new RegExp(/[0-9*_$%?#&!.,+]/, 'gi');
                if (pravilo.test(element.value) == true) {
                    valid = false;
                    error.innerHTML = "*Ime se sastoji od isključivo od slova";
                }
                else {
                    element.classList.remove("input-validation-error");
                    error.classList.remove("field-validation-error");
                    error.classList.add("field-validation-valid");
                    error.innerHTML = "";
                }
            }
        }
        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajPrezimeOsobe() {

        var valid = true;
        var element = document.getElementById("PrezimeOsobe");
        var error = document.getElementById("PrezimeOsobeError");

        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Prezime osobe je obavezno polje";
        }
        else {
            if (element.value.length < 2) {
                valid = false;
                error.innerHTML = "*Prezime se sastoji od najmanje 2 slova";
            }
            else {
                var pravilo = new RegExp(/[0-9*_$%?#&!.,+]/, 'gi');
                if (pravilo.test(element.value) == true) {
                    valid = false;
                    error.innerHTML = "*Prezime se sastoji isključivo od slova";
                }
                else {
                    element.classList.remove("input-validation-error");
                    error.classList.remove("field-validation-error");
                    error.classList.add("field-validation-valid");
                    error.innerHTML = "";
                }
            }
        }
        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }

    function ValidirajKontaktTelefon() {

        var valid = true;
        var element = document.getElementById("KontaktTelefon");
        var error = document.getElementById("KontaktTelefonError");

        //if (element.value == "") {
        //    valid = false;
        //    error.innerHTML = "*Kontakt telefon je obavezno polje";
        //}
        //else {
        if (element.value != "") {
            if (element.value.length < 6) {
                valid = false;
                error.innerHTML = "*Kontakt telefon se sastoji od najmanje 6 brojeva";
            }
            else {
                var pravilo = new RegExp(/[A-Za-z*_$%?#&!.,+-]/, 'gi');
                if (pravilo.test(element.value) == true) {
                    valid = false;
                    error.innerHTML = "*Kontakt telefon može sadržavati samo brojeve";
                }
                else {
                    element.classList.remove("input-validation-error");
                    error.classList.remove("field-validation-error");
                    error.classList.add("field-validation-valid");
                    error.innerHTML = "";
                }
            }
        }
        //}
        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajEmail() {

        var valid = true;
        var element = document.getElementById("Email");
        var error = document.getElementById("EmailError");


        if (element.value != "") {
            var pravilo = new RegExp(/[A-Z0-9._%+-]+[@@][A-Z0-9.-]+\.[A-Z]{2,}/, 'gi')
            if (pravilo.test(element.value) == false) {
                valid = false;
                error.innerHTML = "*Neispravan format email-a";
            }
            else {
                element.classList.remove("input-validation-error");
                error.classList.remove("field-validation-error");
                error.classList.add("field-validation-valid");
                error.innerHTML = "";
            }
        }

        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
        }

        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajDatumUplate() {
        var valid = true;
        var element = document.getElementById("DatumUplate");
        var error = document.getElementById("DatumUplateError");

        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Datum uplate je obavezno polje";
        }
        else {
            if (element.value.length < 10) {
                valid = false;
                error.innerHTML = "*Pogrešan format datuma";
            }
            else {
                element.classList.remove("input-validation-error");
                error.classList.remove("field-validation-error");
                error.classList.add("field-validation-valid");
                error.innerHTML = "";
                valid = true;
            }
        }
        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajIznosBrojevima() {

        var valid = true;
        var element = document.getElementById("IznosKMBrojevima");
        var error = document.getElementById("IznosKMBrojevimaError");

        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Iznos je obavezno polje";
        }
        else {

            var pravilo = new RegExp(/^[+]?[0-9]+(\,[0-9]+)?$/);

            if (!pravilo.test(element.value) == true) {
                valid = false;
                error.innerHTML = "*Iznos može biti samo broj";
            }
            else {
                element.classList.remove("input-validation-error");
                error.classList.remove("field-validation-error");
                error.classList.add("field-validation-valid");
                error.innerHTML = "";
            }
        }


        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajIznosSlovima() {

        var valid = true;
        var element = document.getElementById("IznosKMSlovima");
        var error = document.getElementById("IznosKMSlovimaError");

        var pravilo = new RegExp(/[0-9*_$%?#&!.,+]/, 'gi');
        if (pravilo.test(element.value) == true) {
            valid = false;
            error.innerHTML = "*Iznos slovima se sastoji isključivo od slova";
        }


        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
        }


        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
</script>









