
@model KarateKlub.Web.Areas.ModulTrener.Models.TreneriKorisnickiPodaciVM
@using KarateKlub.Web.Areas.ModulTrener.Models
@{
    ViewBag.PageTitle = "Korisnički podaci";
    ViewBag.Title = "Korisnički podaci";

    Layout = null;
}


<style>
    #PoravnanjeKontrola {
        margin-left: 1px;
        width: 300px;
    }

    #btnSpremi {
        margin-left: 200px;
    }

    #Poravnanje {
        margin-left: 40px;
        margin-top: 10px;
        width: 500px;
    }

    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
    }

    .validation-summary-valid {
        display: none;
    }
</style>

@using (Html.BeginForm("SpremiKorisnickePodatke", "Treneri", FormMethod.Post, new { style = "width:400px;", id = "formaKorisnickiPodaciTrenera" }))
{

    @Html.HiddenFor(Model => Model.OsobaId)
    @Html.HiddenFor(Model => Model.NalogId)
    


        <div id="Poravnanje">


            <div class="form-group" style="width:auto;">
                @Html.TextBoxFor(model => model.TrenutnaLozinka, new { @class = "form-control", style = "display: none;" })
                @Html.ValidationMessageFor(model => model.TrenutnaLozinka)
                @Html.ValidationMessage("TrenutnaLozinkaError", new { id = "TrenutnaLozinkaError" })
            </div>
            <div class="form-group" style="width:auto;">
                <label>Korisničko ime: </label>
                @Html.TextBoxFor(model => model.KorisnickoIme, new { @class = "form-control", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.KorisnickoIme)
                @Html.ValidationMessage("KorisnickoImeError", new { id = "KorisnickoImeError" })
            </div>
                <div class="form-group" style="width:auto;">
                <label>Stara lozinka: </label>
                @Html.TextBoxFor(model => model.StaraLozinka, new { @class = "form-control", type = "password"})
                @Html.ValidationMessageFor(model => model.StaraLozinka)
                @Html.ValidationMessage("StaraLozinkaError", new { id = "StaraLozinkaError" })

            </div>

            <div class="form-group" style="width:auto;">
                <label>Nova lozinka: </label>
                @Html.TextBoxFor(model => model.NovaLozinka, new { @class = "form-control", type = "password" })
                @Html.ValidationMessageFor(model => model.NovaLozinka)
                @Html.ValidationMessage("NovaLozinkaError", new { id = "NovaLozinkaError" })

            </div>
            <div class="form-group" style="width:auto;">
                <label>Potvrda lozinke: </label>
                @Html.TextBoxFor(model => model.PotvrdaLozinke, new { @class = "form-control", type = "password" })
                @Html.ValidationMessageFor(model => model.PotvrdaLozinke)
                @Html.ValidationMessage("PotvrdaLozinkeError", new { id = "PotvrdaLozinkeError" })

            </div>

        </div>
        <div id="btnSpremi">
            <button type="submit" title="Spremi podatke" class="btn-lg btn btn-primary" style="width:170px;" onclick="return Validiraj()"><span class="fa fa-floppy-o"></span> Spremi  </button>
        </div>


    
}


<script type="text/javascript">
    document.getElementById("StaraLozinka").onblur = ValidirajStaruLozinku;
    document.getElementById("NovaLozinka").onblur = ValidirajLozinku;
    document.getElementById("PotvrdaLozinke").onblur = ValidirajPotvrduLozinke;

        function Validiraj() {
            var validna = true;
            if (ValidirajStaruLozinku() == false)
                validna = false;
            if (ValidirajLozinku() == false)
                validna = false;
            if (ValidirajPotvrduLozinke() == false)
                validna = false;
            return validna;
        }

        function ValidirajStaruLozinku() {
            var valid = true;
            var element = document.getElementById("StaraLozinka");
            var trenutnaLozinka =document.getElementById("TrenutnaLozinka");
            var error = document.getElementById("StaraLozinkaError");

            if (element.value == "") {
                valid = false;
                error.innerHTML = "*Stara lozinka je obavezno polje";
            }
            else {
                if (element.value != trenutnaLozinka.value && element.value!="") {
                    valid = false;
                    error.innerHTML = "*Lozinka koju ste unijeli nije ispravna";
                }
                else {
                    element.classList.remove("input-validation-error");
                    error.classList.remove("field-validation-error");
                    error.classList.add("field-validation-valid");
                    error.innerHTML = "";
                }
            }

            if (valid == false) {
                element.classList.add("input-validation-error");
                error.classList.remove("field-validation-valid");
                error.classList.add("field-validation-error");
            }
            return valid;
        }
    function ValidirajLozinku() {

        var valid = true;
        var element = document.getElementById("NovaLozinka");
        var error = document.getElementById("NovaLozinkaError");

        if(element.value==""){

            valid = false;
            error.innerHTML = "*Nova lozinka je obavezno polje!";
        }
        else
        {
            if (element.value.length < 6) {
                valid = false;
                error.innerHTML = "*Lozinka moramo imati najmanje 6 karaktera";
            }
            else {
                var pravilo1 = new RegExp(/[a-zA-Z]/, 'gi');
                var pravilo2 = new RegExp(/[0-9]/, 'gi');
                var pravilo3 = new RegExp(/[$#%&!?*,._+-]/, 'gi');

                if (pravilo1.test(element.value) == false || pravilo2.test(element.value) == false
                    || pravilo3.test(element.value) == false) {
                    valid = false;
                    error.innerHTML = "*Lozinka mora biti kombinacija brojeva, slova i specijalnih znakova";
                }
                else {
                    element.classList.remove("input-validation-error");
                    error.classList.remove("field-validation-error");
                    error.classList.add("field-validation-valid");
                    error.innerHTML = "";
                }
            }
        }

            if (valid == false) {
                element.classList.add("input-validation-error");
                error.classList.remove("field-validation-valid");
                error.classList.add("field-validation-error");
            }
            return valid;
        }
           function ValidirajPotvrduLozinke() {

            var valid = true;
            var element = document.getElementById("PotvrdaLozinke");
            var novaLozinka = document.getElementById("NovaLozinka");
            var error = document.getElementById("PotvrdaLozinkeError");

            if (element.value == "" && novaLozinka.value!="") {
                valid = false;
                error.innerHTML = "*Potvrda lozinke je obavezno polje";
            }
            else {
                if (element.value != novaLozinka.value && novaLozinka.value!="") {
                    valid = false;
                    error.innerHTML = "*Potvrda lozinke se ne slaže sa poljem lozinka";
                }
                else {
                    element.classList.remove("input-validation-error");
                    error.classList.remove("field-validation-error");
                    error.classList.add("field-validation-valid");
                    error.innerHTML = "";
                }
            }

            if (valid == false) {
                element.classList.add("input-validation-error");
                error.classList.remove("field-validation-valid");
                error.classList.add("field-validation-error");
            }
            return valid;
        }
</script>

