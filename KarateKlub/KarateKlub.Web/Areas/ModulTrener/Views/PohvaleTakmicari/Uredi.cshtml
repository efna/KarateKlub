@model KarateKlub.Web.Areas.ModulTrener.Models.PohvaleTakmicariUrediVM
@using KarateKlub.Web.Areas.ModulTrener.Models
@{
    ViewBag.PageTitle = "Uređivanje pohvale";
    ViewBag.Title = "Uređivanje pohvale";
    Layout = null;
}

<style>
    #PoravnanjeKontrola {
        margin-left: 40px;
        margin-top: 10px;
        width: 500px;
    }

    #btnSpremi {
        margin-left: 200px;
    }

    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
    }

    .validation-summary-valid {
        display: none;
    }
</style>



@using (Html.BeginForm("SpremiIzmjenuPohvale", "PohvaleTakmicari", FormMethod.Post, new { style = "width:400px;", id = "formaUrediPohvalu" }))
{
    @Html.HiddenFor(Model => Model.aktivnost)
    @Html.HiddenFor(Model => Model.TakmicarId)
    @Html.HiddenFor(Model => Model.Id)


    <div id="PoravnanjeKontrola">

        <div class="form-group" style="width:auto;">

            <label>Datum dodjele: </label>

            <div class="input-group date">
                @Html.TextBoxFor(model => model.DatumDodjele, new { @class = "form-control datepicker", onchange = "ValidirajDatumDodjele()" })
                @Html.ValidationMessageFor(model => model.DatumDodjele)
                @Html.ValidationMessage("DatumDodjeleError", new { id = "DatumDodjeleError" })
                <div class="input-group-addon">
                    <i class="fa fa-calendar"></i>
                </div>
            </div>

        </div>
        <div class="form-group" style="width:auto;">
            <label>Mjesto dodjele: </label>
            @Html.TextBoxFor(model => model.MjestoDodjele, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MjestoDodjele)
            @Html.ValidationMessage("MjestoDodjeleError", new { id = "MjestoDodjeleError" })

        </div>

        <div class="form-group" style="width:auto;">
            <label>Dodjeljeno od: </label>
            @Html.TextBoxFor(model => model.DodjeljenoOd, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DodjeljenoOd)
            @Html.ValidationMessage("DodjeljenoOdError", new { id = "DodjeljenoOdError" })

        </div>
        <div class="form-group" style="width:auto;">
            <label>Razlog: </label>
            @Html.TextBoxFor(model => model.DodjeljenoZbog, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DodjeljenoZbog)
            @Html.ValidationMessage("DodjeljenoZbogError", new { id = "DodjeljenoZbogError" })

        </div>

        <div class="form-group" style="width:auto;">
            <label>Obrazloženje: </label>
            @Html.TextAreaFor(model => model.Obrazlozenje, new { @class = "form-control", @style = "resize:none;height:150px;" })
            @Html.ValidationMessageFor(model => model.Obrazlozenje)
            @Html.ValidationMessage("ObrazlozenjeError", new { id = "ObrazlozenjeError" })

        </div>
        <br />
    </div>
    <div id="btnSpremi">
        <button type="submit" title="Spremi podatke" class="btn-lg btn btn-primary" style="width:170px;" onclick="return Validiraj()"><span class="fa fa-floppy-o"></span> Spremi  </button>
    </div>

}


<script>

    $(function () {
        $('.datepicker').datepicker({
            autoclose: true,
            format: 'dd/mm/yyyy',
            language: 'bs'
        })
    })
</script>
<script type="text/javascript">


    document.getElementById("DatumDodjele").onblur = ValidirajDatumDodjele;
    document.getElementById("MjestoDodjele").onblur = ValidirajMjestoDodjele;
    document.getElementById("DodjeljenoOd").onblur = ValidirajDodjeljenoOd;
    document.getElementById("DodjeljenoZbog").onblur = ValidirajDodjeljenoZbog;



    function Validiraj() {


        var validna = true;
        if (ValidirajDatumDodjele() == false)
            validna = false;
        if (ValidirajMjestoDodjele() == false)
            validna = false;
        if (ValidirajDodjeljenoOd() == false)
            validna = false;
        if (ValidirajDodjeljenoZbog() == false)
            validna = false;

        return validna;
    }




    function ValidirajDatumDodjele() {
        var valid = true;
        var element = document.getElementById("DatumDodjele");
        var error = document.getElementById("DatumDodjeleError");

        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Datum dodjele je obavezno polje";
        }
        else {
            if (element.value.length < 10) {
                valid = false;
                error.innerHTML = "*Pogrešan format datuma";
            }
            else {
                element.classList.remove("input-validation-error");
                error.classList.remove("field-validation-error");
                error.classList.add("field-validation-valid");
                error.innerHTML = "";
                valid = true;
            }
        }
        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajMjestoDodjele() {

        var valid = true;
        var element = document.getElementById("MjestoDodjele");
        var error = document.getElementById("MjestoDodjeleError");


        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Mjesto dodjele je obavezno polje";
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
        }


        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }
    function ValidirajDodjeljenoOd() {

        var valid = true;
        var element = document.getElementById("DodjeljenoOd");
        var error = document.getElementById("DodjeljenoOdError");


        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Obavezno je unijeti ko je dodijelio pohvalu takmičaru.";
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
        }


        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }

    function ValidirajDodjeljenoZbog() {

        var valid = true;
        var element = document.getElementById("DodjeljenoZbog");
        var error = document.getElementById("DodjeljenoZbogError");


        if (element.value == "") {
            valid = false;
            error.innerHTML = "*Razlog dodjele je obavezno polje.";
        }
        else {
            element.classList.remove("input-validation-error");
            error.classList.remove("field-validation-error");
            error.classList.add("field-validation-valid");
            error.innerHTML = "";
        }


        if (valid == false) {
            element.classList.add("input-validation-error");
            error.classList.remove("field-validation-valid");
            error.classList.add("field-validation-error");
        }
        return valid;
    }

</script>







